#!/bin/bash
BASEDIR=${CONSUME_BASEDIR:-${HOME}/.config/httpie/sessions}
FIFO=${CONSUME_FIFO:-/tmp/consume-fifo}
BASEURL="$1"
SESSION="$3"

function jsonval {
    temp=`echo "$1" | sed 's/\\\\\//\//g' | sed 's/[{}]//g' | awk -v k="text" '{n=split($0,a,","); for (i=1; i<=n; i++) print a[i]}' | sed 's/\"\:\"/\|/g' | sed 's/[\,]/ /g' | sed 's/\"//g' | grep -w $2 | cut -d":" -f2| sed -e 's/^ *//g' -e 's/ *$//g'`
    echo ${temp##*|}
}

if [[ -z "$BASEURL" || -z "$SESSION" ]]
then
    echo "Usage: $(basename $0) [baseurl] as [session] [...httpie args]"
    exit 1
fi

if [ -r "$BASEDIR/$BASEURL/$SESSION.json.gpg" ]
then
    SESSION_JSON=$(gpg -q --no-tty --decrypt "$BASEDIR/$BASEURL/$SESSION.json.gpg")
elif [ -r "$BASEDIR/$BASEURL/$SESSION.json" ]
then
    SESSION_JSON=$(cat "$BASEDIR/$BASEURL/$SESSION.json")
else
    echo "ERROR: No session file $SESSION found for $BASEURL"
    exit 1
fi

SCHEME=`jsonval "$SESSION_JSON" scheme`
DEFAULT_OPTIONS=`jsonval "$SESSION_JSON" default_options`
BASE_URI=`jsonval "$SESSION_JSON" base_uri`

shift 3

if [ $# -eq 0 ]
then
    set -- GET /
fi

arguments=()
for var in "$@"
do
    if [[ "$var" == /* ]]
    then
        arguments+=("${SCHEME:-http}://${BASEURL//_/:}${BASE_URI}$var")
    else
        arguments+=("$var")
    fi
done

if [ ! -p "$FIFO" ]
then
    mkfifo "$FIFO"
fi

echo "$SESSION_JSON" > "$FIFO" &
http --session-read-only="${FIFO}" $DEFAULT_OPTIONS "${arguments[@]}"
